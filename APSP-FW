#include&lt;stdio.h&gt;
#include&lt;limits.h&gt;
#define V 4

void printSolution(int dist[][V])
{
printf(&quot;The following matrix shows the shortest distances between every pair of
vertices:\n&quot;);
for (int i = 0; i &lt; V; i++)
{
for (int j = 0; j &lt; V; j++)
{
if (dist[i][j] == int_max)
{
printf(&quot;INF\t&quot;);
} else {
printf(&quot;%d\t&quot;, dist[i][j]);
}
}
printf(&quot;\n&quot;);
}
}

void allPairShortest(int graph[][V])
{
int dist[V][V];
for (int i = 0; i &lt; V; i++)
{

for (int j = 0; j &lt; V; j++)
{
dist[i][j] = graph[i][j];
}
}
for (int k = 0; k &lt; V; k++)
{
for (int i = 0; i &lt; V; i++)
{
for (int j = 0; j &lt; V; j++)
{
if (dist[i][k] != int_max &amp;&amp; dist[k][j] != int_max &amp;&amp; dist[i][j] &gt; dist[i][k] + dist[k][j])
{
dist[i][j] = dist[i][k] + dist[k][j];
}
}
}
}
printSolution(dist);
}

int main()
{
int graph[V][V] = {
{0, 8, int_max, 1},
{int_max, 0, 1, int_max},
{4, int_max, 0, int_max},
{int_max, 2, 3, 0}
};
allPairShortest(graph);
return 0;
}
